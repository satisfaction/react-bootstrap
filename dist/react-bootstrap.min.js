var __slice=[].slice,__bind=function(fn,me){return function(){return fn.apply(me,arguments)}};!function(root,factory){"function"==typeof define&&define.amd?define(["react"],factory):"object"==typeof exports?module.exports=factory(require("react")):root.Bootstrap=factory(root.React)}(this,function(React){"use strict";var Button,Checkbox,ClassName,Form,Input,Modal,RadioButton,Select,TextInput,assign,buildHelpBlock,button,div,form,input,isArray,isFunction,isRegExp,label,li,p,span,_ref;return _ref=React.DOM,button=_ref.button,div=_ref.div,form=_ref.form,input=_ref.input,label=_ref.label,li=_ref.li,p=_ref.p,span=_ref.span,assign=function(){var dest,key,source,sources,target,val,_i,_len;if(target=arguments[0],sources=2<=arguments.length?__slice.call(arguments,1):[],"undefined"===target||null===target)throw new TypeError("Cannot convert argument to object");for(dest=Object(target),_i=0,_len=sources.length;_len>_i;_i++)if(source=sources[_i],"undefined"!=typeof source&&null!==source)for(key in source)val=source[key],source.hasOwnProperty(key)&&(dest[key]=val);return dest},isArray=function(obj){return"object"==typeof obj&&obj.constructor===Array},isFunction=function(obj){return"function"==typeof obj},isRegExp=function(obj){return"object"==typeof obj&&obj.constructor===RegExp},buildHelpBlock=function(text){return text?p({className:"help-block"},text):null},ClassName=function(){function ClassName(words){this.words=null!=words?words:[],this.toString=__bind(this.toString,this),this.remove=__bind(this.remove,this),this.has=__bind(this.has,this),this.add=__bind(this.add,this),isArray(this.words)||(this.words=this.words.split(" "))}return ClassName.prototype.add=function(word){word&&(this.words=this.words.concat(word.split(" ")))},ClassName.prototype.has=function(criteria){var exists,word,_i,_len,_ref1;if(exists=!1,!criteria)return exists;if(isRegExp(criteria))for(_ref1=this.words,_i=0,_len=_ref1.length;_len>_i;_i++)word=_ref1[_i],criteria.test(word)&&(exists=!0);else exists=this.words.indexOf(criteria)>-1;return exists},ClassName.prototype.remove=function(word){word&&this.words.indexOf(word)>-1&&this.words.splice(this.words.indexOf(word))},ClassName.prototype.toString=function(){return this.words.join(" ").trim()},ClassName}(),buildHelpBlock=function(text){return text?p({className:"help-block"},text):null},Button=React.createClass({render:function(){var className,props;return props=assign({},this.props,{type:"button"}),className=new ClassName([this.props.className,"btn"]),className.has(/btn-(danger|default|info|link|primary|success|warning)/)||className.add("btn-default"),props.className=className.toString(),button(props)}}),Checkbox=React.createClass({getInitialState:function(){return{checked:this.props.checked||!1}},render:function(){var className,props;return props=assign({},this.props,{children:null,label:null,type:"checkbox"}),className=new ClassName(props.className),className.has(""+props.type+"-inline")?(className.remove(""+props.type+"-inline"),label({className:""+props.type+"-inline"},input(props),this.props.label||this.props.children||"")):div({className:props.type},label(null,input(props),this.props.label||this.props.children||""))}}),Form=React.createClass({render:function(){return form({id:this.props.id,className:this.props.className,role:"form"},this.props.children)}}),Input=React.createClass({render:function(){var className,inputTypes,props;return props=assign({type:"text"},this.props),inputTypes=["text","email","password"],className=new ClassName(props.className),inputTypes.indexOf(props.type)>-1&&className.add("form-control"),props.className=className.toString(),input(props)}}),Modal=React.createClass({propTypes:{id:React.PropTypes.string.isRequired,className:React.PropTypes.string},render:function(){var className;return className=new ClassName([this.props.className,"modal","fade"]),div({className:className.toString(),id:this.props.id,tabindex:-1,role:"dialog"},div({className:"modal-dialog "+(this.props.small?"modal-sm":"")},div({className:"modal-content",children:this.props.children})))}}),Select=React.createClass({getInitialState:function(){return{collapsed:!0,value:this.props.value||void 0}},render:function(){var className;return className=new ClassName([this.props.className,"react-ui","react-ui-select"]),this.state.collapsed&&className.add("react-ui-is-collapsed"),div({className:className.toString()},div({onClick:this.onClick},label(null,this.getLabel()),span(),Input({type:"text",onKeyPress:this.onKeyPress})),ul(null,this.renderOptions()))},getLabel:function(){var i,len,option;if(!this.state.value)return"";for(i=0,label=void 0,len=this.props.options.length,option=void 0;len>i;){if(option=this.props.options[i],option.value===this.state.value){label=option.label;break}i++}return label||""},onClick:function(){return this.setState({collapsed:!this.state.collapsed})},onKeyPress:function(event){return event.preventDefault()},onOptionClick:function(value){return this.setState({value:value}),setTimeout(function(_this){return function(){return _this.props.onChange?_this.props.onChange(_this.state.value):void 0}}(this))},renderOptions:function(){return this.props.options.map(function(_this){return function(option,i){var className,onClick;return className=option.value===_this.state.value?"react-ui-is-selected":"",onClick=function(){_this.onOptionClick(option.value)},li({key:i,className:className,onClick:onClick},option.text)}}(this))}}),RadioButton=React.createClass({getInitialState:function(){return{checked:this.props.checked||!1}},render:function(){var className,props;return props=assign({},this.props,{children:null,label:null,type:"radio"}),className=new ClassName(props.className),className.has(""+props.type+"-inline")?(className.remove(""+props.type+"-inline"),label({className:""+props.type+"-inline"},Input(props),this.props.label||this.props.children||"")):div({className:props.type},label(null,input(props),this.props.label||this.props.children||""),buildHelpBlock(props.help))}}),TextInput=React.createClass({getInitialState:function(){return{id:this.props.id||"text-input-"+Date.now(),value:this.props.value}},render:function(){var className,error,props;return props=assign({ref:"input"},this.props),this._inputRef=props.ref,className=new ClassName(this.props.className),className.remove("form-group"),this.props.validate&&className.add((error=this.validate())?"has-error":"has-success"),props.className=className.toString(),div({className:"form-group"},this.renderLabel(),Input(props),this.renderHelp())},onChange:function(event){this.setState({value:this.refs[this._inputRef].value}),isFunction(this.props.onChange)&&setTimeout(function(){return this.props.onChange(event)})},renderLabel:function(){return this.props.label?label({htmlFor:this.state.id},this.props.label):null},renderHelp:function(){return this.props.helpBlock?span({className:"help-block"},this.props.helpBlock):null},validate:function(){return isFunction(this.props.validate)?this.props.validate(this.state.value):void 0}}),{Button:Button,Checkbox:Checkbox,Form:Form,Input:Input,Modal:Modal,RadioButton:RadioButton,Select:Select,TextInput:TextInput}});